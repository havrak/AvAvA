/**
 * User API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import ApplicationToInstall from './model/ApplicationToInstall';
import Body from './model/Body';
import Body1 from './model/Body1';
import Container from './model/Container';
import ContainerResourceState from './model/ContainerResourceState';
import ContainerResourceStateAdresses from './model/ContainerResourceStateAdresses';
import ContainerResourceStateCPU from './model/ContainerResourceStateCPU';
import ContainerResourceStateCounters from './model/ContainerResourceStateCounters';
import ContainerResourceStateDisk from './model/ContainerResourceStateDisk';
import ContainerResourceStateNetworks from './model/ContainerResourceStateNetworks';
import ContainerResourceStateRAM from './model/ContainerResourceStateRAM';
import ContainerState from './model/ContainerState';
import HostInformation from './model/HostInformation';
import HostInformationCPU from './model/HostInformationCPU';
import Image from './model/Image';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import LightResourceState from './model/LightResourceState';
import LightResourceStateCPU from './model/LightResourceStateCPU';
import LightResourceStateDisk from './model/LightResourceStateDisk';
import LightResourceStateNetwork from './model/LightResourceStateNetwork';
import LightResourceStateNetworkDownload from './model/LightResourceStateNetworkDownload';
import LightResourceStateNetworkUpload from './model/LightResourceStateNetworkUpload';
import LightResourceStateRAM from './model/LightResourceStateRAM';
import Limits from './model/Limits';
import LimitsNetwork from './model/LimitsNetwork';
import OperationState from './model/OperationState';
import Project from './model/Project';
import ProjectState from './model/ProjectState';
import Snapshot from './model/Snapshot';
import Template from './model/Template';
import User from './model/User';
import UserData from './model/UserData';
import UserProjects from './model/UserProjects';
import UserProjectsState from './model/UserProjectsState';
import DefaultApi from './api/DefaultApi';

/**
* Object.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var UserApi = require('index'); // See note below*.
* var xxxSvc = new UserApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new UserApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new UserApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new UserApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApplicationToInstall model constructor.
     * @property {module:model/ApplicationToInstall}
     */
    ApplicationToInstall,

    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body,

    /**
     * The Body1 model constructor.
     * @property {module:model/Body1}
     */
    Body1,

    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container,

    /**
     * The ContainerResourceState model constructor.
     * @property {module:model/ContainerResourceState}
     */
    ContainerResourceState,

    /**
     * The ContainerResourceStateAdresses model constructor.
     * @property {module:model/ContainerResourceStateAdresses}
     */
    ContainerResourceStateAdresses,

    /**
     * The ContainerResourceStateCPU model constructor.
     * @property {module:model/ContainerResourceStateCPU}
     */
    ContainerResourceStateCPU,

    /**
     * The ContainerResourceStateCounters model constructor.
     * @property {module:model/ContainerResourceStateCounters}
     */
    ContainerResourceStateCounters,

    /**
     * The ContainerResourceStateDisk model constructor.
     * @property {module:model/ContainerResourceStateDisk}
     */
    ContainerResourceStateDisk,

    /**
     * The ContainerResourceStateNetworks model constructor.
     * @property {module:model/ContainerResourceStateNetworks}
     */
    ContainerResourceStateNetworks,

    /**
     * The ContainerResourceStateRAM model constructor.
     * @property {module:model/ContainerResourceStateRAM}
     */
    ContainerResourceStateRAM,

    /**
     * The ContainerState model constructor.
     * @property {module:model/ContainerState}
     */
    ContainerState,

    /**
     * The HostInformation model constructor.
     * @property {module:model/HostInformation}
     */
    HostInformation,

    /**
     * The HostInformationCPU model constructor.
     * @property {module:model/HostInformationCPU}
     */
    HostInformationCPU,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The LightResourceState model constructor.
     * @property {module:model/LightResourceState}
     */
    LightResourceState,

    /**
     * The LightResourceStateCPU model constructor.
     * @property {module:model/LightResourceStateCPU}
     */
    LightResourceStateCPU,

    /**
     * The LightResourceStateDisk model constructor.
     * @property {module:model/LightResourceStateDisk}
     */
    LightResourceStateDisk,

    /**
     * The LightResourceStateNetwork model constructor.
     * @property {module:model/LightResourceStateNetwork}
     */
    LightResourceStateNetwork,

    /**
     * The LightResourceStateNetworkDownload model constructor.
     * @property {module:model/LightResourceStateNetworkDownload}
     */
    LightResourceStateNetworkDownload,

    /**
     * The LightResourceStateNetworkUpload model constructor.
     * @property {module:model/LightResourceStateNetworkUpload}
     */
    LightResourceStateNetworkUpload,

    /**
     * The LightResourceStateRAM model constructor.
     * @property {module:model/LightResourceStateRAM}
     */
    LightResourceStateRAM,

    /**
     * The Limits model constructor.
     * @property {module:model/Limits}
     */
    Limits,

    /**
     * The LimitsNetwork model constructor.
     * @property {module:model/LimitsNetwork}
     */
    LimitsNetwork,

    /**
     * The OperationState model constructor.
     * @property {module:model/OperationState}
     */
    OperationState,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectState model constructor.
     * @property {module:model/ProjectState}
     */
    ProjectState,

    /**
     * The Snapshot model constructor.
     * @property {module:model/Snapshot}
     */
    Snapshot,

    /**
     * The Template model constructor.
     * @property {module:model/Template}
     */
    Template,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserData model constructor.
     * @property {module:model/UserData}
     */
    UserData,

    /**
     * The UserProjects model constructor.
     * @property {module:model/UserProjects}
     */
    UserProjects,

    /**
     * The UserProjectsState model constructor.
     * @property {module:model/UserProjectsState}
     */
    UserProjectsState,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
