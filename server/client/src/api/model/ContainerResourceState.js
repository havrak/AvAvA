/**
 * User API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerResourceStateCPU from './ContainerResourceStateCPU';
import ContainerResourceStateDisk from './ContainerResourceStateDisk';
import ContainerResourceStateRAM from './ContainerResourceStateRAM';
import NetworkState from './NetworkState';
import OperationState from './OperationState';

/**
* The ContainerResourceState model module.
* @module model/ContainerResourceState
* @version 1.0
*/
export default class ContainerResourceState {
    /**
    * Constructs a new <code>ContainerResourceState</code>.
    * Object representing current state of the container (not history). Each object also contains limit information that were in effect in the time of measuring the state.
    * @alias module:model/ContainerResourceState
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>ContainerResourceState</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ContainerResourceState} obj Optional instance to populate.
    * @return {module:model/ContainerResourceState} The populated <code>ContainerResourceState</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerResourceState();
                        
            
            if (data.hasOwnProperty('measuredOn')) {
                obj['measuredOn'] = ApiClient.convertToType(data['measuredOn'], 'String');
            }
            if (data.hasOwnProperty('CPU')) {
                obj['CPU'] = ContainerResourceStateCPU.constructFromObject(data['CPU']);
            }
            if (data.hasOwnProperty('RAM')) {
                obj['RAM'] = ContainerResourceStateRAM.constructFromObject(data['RAM']);
            }
            if (data.hasOwnProperty('disk')) {
                obj['disk'] = ContainerResourceStateDisk.constructFromObject(data['disk']);
            }
            if (data.hasOwnProperty('internet')) {
                obj['internet'] = NetworkState.constructFromObject(data['internet']);
            }
            if (data.hasOwnProperty('loopback')) {
                obj['loopback'] = NetworkState.constructFromObject(data['loopback']);
            }
            if (data.hasOwnProperty('networks')) {
                obj['networks'] = ApiClient.convertToType(data['networks'], [NetworkState]);
            }
            if (data.hasOwnProperty('numberOfProcesses')) {
                obj['numberOfProcesses'] = ApiClient.convertToType(data['numberOfProcesses'], 'Number');
            }
            if (data.hasOwnProperty('operationState')) {
                obj['operationState'] = OperationState.constructFromObject(data['operationState']);
            }
        }
        return obj;
    }

    /**
    * Date and time when this state was measured
    * @member {String} measuredOn
    */
    'measuredOn' = undefined;
    /**
    * @member {module:model/ContainerResourceStateCPU} CPU
    */
    'CPU' = undefined;
    /**
    * @member {module:model/ContainerResourceStateRAM} RAM
    */
    'RAM' = undefined;
    /**
    * @member {module:model/ContainerResourceStateDisk} disk
    */
    'disk' = undefined;
    /**
    * @member {module:model/NetworkState} internet
    */
    'internet' = undefined;
    /**
    * @member {module:model/NetworkState} loopback
    */
    'loopback' = undefined;
    /**
    * @member {Array.<module:model/NetworkState>} networks
    */
    'networks' = undefined;
    /**
    * Process count
    * @member {Number} numberOfProcesses
    */
    'numberOfProcesses' = undefined;
    /**
    * @member {module:model/OperationState} operationState
    */
    'operationState' = undefined;




}
