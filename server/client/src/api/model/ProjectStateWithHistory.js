/**
 * User API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerStateWithHistory from './ContainerStateWithHistory';

/**
* The ProjectStateWithHistory model module.
* @module model/ProjectStateWithHistory
* @version 1.0
*/
export default class ProjectStateWithHistory {
    /**
    * Constructs a new <code>ProjectStateWithHistory</code>.
    * Object that knows state and history of project and all containers in it
    * @alias module:model/ProjectStateWithHistory
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>ProjectStateWithHistory</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ProjectStateWithHistory} obj Optional instance to populate.
    * @return {module:model/ProjectStateWithHistory} The populated <code>ProjectStateWithHistory</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectStateWithHistory();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('containerStatesHistory')) {
                obj['containerStatesHistory'] = ApiClient.convertToType(data['containerStatesHistory'], [ContainerStateWithHistory]);
            }
        }
        return obj;
    }

    /**
    * id of the project
    * @member {Number} id
    */
    'id' = undefined;
    /**
    * First state is the current state, after that there are logs of containers's state that were part of this project. Even if the container has already been deleted, it is present in this log.
    * @member {Array.<module:model/ContainerStateWithHistory>} containerStatesHistory
    */
    'containerStatesHistory' = undefined;




}
